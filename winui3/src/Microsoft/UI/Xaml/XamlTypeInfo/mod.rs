// Bindings generated by `windows-bindgen` 0.63.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

windows_core::imp::define_interface!(
    IXamlControlsXamlMetaDataProvider,
    IXamlControlsXamlMetaDataProvider_Vtbl,
    0x17fa3f58_3472_5aa2_a0f8_1ab8a519573d
);
impl windows_core::RuntimeType for IXamlControlsXamlMetaDataProvider {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
impl windows_core::RuntimeName for IXamlControlsXamlMetaDataProvider {
    const NAME: &'static str = "Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProvider";
}
pub trait IXamlControlsXamlMetaDataProvider_Impl: windows_core::IUnknownImpl {}
impl IXamlControlsXamlMetaDataProvider_Vtbl {
    pub const fn new<Identity: IXamlControlsXamlMetaDataProvider_Impl, const OFFSET: isize>() -> Self
    {
        Self {
            base__: windows_core::IInspectable_Vtbl::new::<
                Identity,
                IXamlControlsXamlMetaDataProvider,
                OFFSET,
            >(),
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<IXamlControlsXamlMetaDataProvider as windows_core::Interface>::IID
    }
}
#[repr(C)]
#[doc(hidden)]
pub struct IXamlControlsXamlMetaDataProvider_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
}
windows_core::imp::define_interface!(
    IXamlControlsXamlMetaDataProviderStatics,
    IXamlControlsXamlMetaDataProviderStatics_Vtbl,
    0x2d7eb3fd_ecdb_5084_b7e0_12f9598381ef
);
impl windows_core::RuntimeType for IXamlControlsXamlMetaDataProviderStatics {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
impl windows_core::RuntimeName for IXamlControlsXamlMetaDataProviderStatics {
    const NAME: &'static str =
        "Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderStatics";
}
pub trait IXamlControlsXamlMetaDataProviderStatics_Impl: windows_core::IUnknownImpl {
    fn Initialize(&self) -> windows_core::Result<()>;
}
impl IXamlControlsXamlMetaDataProviderStatics_Vtbl {
    pub const fn new<
        Identity: IXamlControlsXamlMetaDataProviderStatics_Impl,
        const OFFSET: isize,
    >() -> Self {
        unsafe extern "system" fn Initialize<
            Identity: IXamlControlsXamlMetaDataProviderStatics_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            unsafe {
                let this: &Identity =
                    &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                IXamlControlsXamlMetaDataProviderStatics_Impl::Initialize(this).into()
            }
        }
        Self {
            base__: windows_core::IInspectable_Vtbl::new::<
                Identity,
                IXamlControlsXamlMetaDataProviderStatics,
                OFFSET,
            >(),
            Initialize: Initialize::<Identity, OFFSET>,
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<IXamlControlsXamlMetaDataProviderStatics as windows_core::Interface>::IID
    }
}
#[repr(C)]
#[doc(hidden)]
pub struct IXamlControlsXamlMetaDataProviderStatics_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
    pub Initialize: unsafe extern "system" fn(*mut core::ffi::c_void) -> windows_core::HRESULT,
}
#[cfg(feature = "UI_Xaml_Markup")]
#[repr(transparent)]
#[derive(Clone, Debug, Eq, PartialEq)]
pub struct XamlControlsXamlMetaDataProvider(windows_core::IUnknown);
#[cfg(feature = "UI_Xaml_Markup")]
windows_core::imp::interface_hierarchy!(
    XamlControlsXamlMetaDataProvider,
    windows_core::IUnknown,
    windows_core::IInspectable,
    super::Markup::IXamlMetadataProvider
);
#[cfg(feature = "UI_Xaml_Markup")]
impl XamlControlsXamlMetaDataProvider {
    pub fn new() -> windows_core::Result<Self> {
        Self::IActivationFactory(|f| f.ActivateInstance::<Self>())
    }
    fn IActivationFactory<
        R,
        F: FnOnce(&windows_core::imp::IGenericFactory) -> windows_core::Result<R>,
    >(
        callback: F,
    ) -> windows_core::Result<R> {
        static SHARED: windows_core::imp::FactoryCache<
            XamlControlsXamlMetaDataProvider,
            windows_core::imp::IGenericFactory,
        > = windows_core::imp::FactoryCache::new();
        SHARED.call(callback)
    }
    pub fn Initialize() -> windows_core::Result<()> {
        Self::IXamlControlsXamlMetaDataProviderStatics(|this| unsafe {
            (windows_core::Interface::vtable(this).Initialize)(windows_core::Interface::as_raw(
                this,
            ))
            .ok()
        })
    }
    pub fn GetXamlType(
        &self,
        r#type: &crate::Windows::UI::Xaml::Interop::TypeName,
    ) -> windows_core::Result<super::Markup::IXamlType> {
        let this = self;
        unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).GetXamlType)(
                windows_core::Interface::as_raw(this),
                core::mem::transmute_copy(r#type),
                &mut result__,
            )
            .and_then(|| windows_core::Type::from_abi(result__))
        }
    }
    pub fn GetXamlTypeByFullName(
        &self,
        fullname: &windows_core::HSTRING,
    ) -> windows_core::Result<super::Markup::IXamlType> {
        let this = self;
        unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).GetXamlTypeByFullName)(
                windows_core::Interface::as_raw(this),
                core::mem::transmute_copy(fullname),
                &mut result__,
            )
            .and_then(|| windows_core::Type::from_abi(result__))
        }
    }
    pub fn GetXmlnsDefinitions(
        &self,
    ) -> windows_core::Result<windows_core::Array<super::Markup::XmlnsDefinition>> {
        let this = self;
        unsafe {
            let mut result__ = core::mem::MaybeUninit::zeroed();
            (windows_core::Interface::vtable(this).GetXmlnsDefinitions)(
                windows_core::Interface::as_raw(this),
                windows_core::Array::<super::Markup::XmlnsDefinition>::set_abi_len(
                    core::mem::transmute(&mut result__),
                ),
                result__.as_mut_ptr() as *mut _ as _,
            )
            .map(|| result__.assume_init())
        }
    }
    fn IXamlControlsXamlMetaDataProviderStatics<
        R,
        F: FnOnce(&IXamlControlsXamlMetaDataProviderStatics) -> windows_core::Result<R>,
    >(
        callback: F,
    ) -> windows_core::Result<R> {
        static SHARED: windows_core::imp::FactoryCache<
            XamlControlsXamlMetaDataProvider,
            IXamlControlsXamlMetaDataProviderStatics,
        > = windows_core::imp::FactoryCache::new();
        SHARED.call(callback)
    }
}
#[cfg(feature = "UI_Xaml_Markup")]
impl windows_core::RuntimeType for XamlControlsXamlMetaDataProvider {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_class::<Self, super::Markup::IXamlMetadataProvider>();
}
#[cfg(feature = "UI_Xaml_Markup")]
unsafe impl windows_core::Interface for XamlControlsXamlMetaDataProvider {
    type Vtable = <super::Markup::IXamlMetadataProvider as windows_core::Interface>::Vtable;
    const IID: windows_core::GUID =
        <super::Markup::IXamlMetadataProvider as windows_core::Interface>::IID;
}
#[cfg(feature = "UI_Xaml_Markup")]
impl windows_core::RuntimeName for XamlControlsXamlMetaDataProvider {
    const NAME: &'static str = "Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider";
}
#[cfg(feature = "UI_Xaml_Markup")]
unsafe impl Send for XamlControlsXamlMetaDataProvider {}
#[cfg(feature = "UI_Xaml_Markup")]
unsafe impl Sync for XamlControlsXamlMetaDataProvider {}
