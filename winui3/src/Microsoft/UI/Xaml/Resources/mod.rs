// Bindings generated by `windows-bindgen` 0.62.1

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

#[repr(transparent)]
#[derive(Clone, Debug, Eq, PartialEq)]
pub struct CustomXamlResourceLoader(windows_core::IUnknown);
windows_core::imp::interface_hierarchy!(
    CustomXamlResourceLoader,
    windows_core::IUnknown,
    windows_core::IInspectable
);
impl CustomXamlResourceLoader {
    pub fn new() -> windows_core::Result<CustomXamlResourceLoader> {
        Self::ICustomXamlResourceLoaderFactory(|this| unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).CreateInstance)(
                windows_core::Interface::as_raw(this),
                core::ptr::null_mut(),
                &mut core::ptr::null_mut(),
                &mut result__,
            )
            .and_then(|| windows_core::Type::from_abi(result__))
        })
    }
    pub fn GetResource(
        &self,
        resourceid: &windows_core::HSTRING,
        objecttype: &windows_core::HSTRING,
        propertyname: &windows_core::HSTRING,
        propertytype: &windows_core::HSTRING,
    ) -> windows_core::Result<windows_core::IInspectable> {
        let this = &windows_core::Interface::cast::<ICustomXamlResourceLoaderOverrides>(self)?;
        unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).GetResource)(
                windows_core::Interface::as_raw(this),
                core::mem::transmute_copy(resourceid),
                core::mem::transmute_copy(objecttype),
                core::mem::transmute_copy(propertyname),
                core::mem::transmute_copy(propertytype),
                &mut result__,
            )
            .and_then(|| windows_core::Type::from_abi(result__))
        }
    }
    pub fn Current() -> windows_core::Result<CustomXamlResourceLoader> {
        Self::ICustomXamlResourceLoaderStatics(|this| unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).Current)(
                windows_core::Interface::as_raw(this),
                &mut result__,
            )
            .and_then(|| windows_core::Type::from_abi(result__))
        })
    }
    pub fn SetCurrent<P0>(value: P0) -> windows_core::Result<()>
    where
        P0: windows_core::Param<CustomXamlResourceLoader>,
    {
        Self::ICustomXamlResourceLoaderStatics(|this| unsafe {
            (windows_core::Interface::vtable(this).SetCurrent)(
                windows_core::Interface::as_raw(this),
                value.param().abi(),
            )
            .ok()
        })
    }
    fn ICustomXamlResourceLoaderFactory<
        R,
        F: FnOnce(&ICustomXamlResourceLoaderFactory) -> windows_core::Result<R>,
    >(
        callback: F,
    ) -> windows_core::Result<R> {
        static SHARED: windows_core::imp::FactoryCache<
            CustomXamlResourceLoader,
            ICustomXamlResourceLoaderFactory,
        > = windows_core::imp::FactoryCache::new();
        SHARED.call(callback)
    }
    fn ICustomXamlResourceLoaderStatics<
        R,
        F: FnOnce(&ICustomXamlResourceLoaderStatics) -> windows_core::Result<R>,
    >(
        callback: F,
    ) -> windows_core::Result<R> {
        static SHARED: windows_core::imp::FactoryCache<
            CustomXamlResourceLoader,
            ICustomXamlResourceLoaderStatics,
        > = windows_core::imp::FactoryCache::new();
        SHARED.call(callback)
    }
}
impl windows_core::RuntimeType for CustomXamlResourceLoader {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_class::<Self, ICustomXamlResourceLoader>();
}
unsafe impl windows_core::Interface for CustomXamlResourceLoader {
    type Vtable = <ICustomXamlResourceLoader as windows_core::Interface>::Vtable;
    const IID: windows_core::GUID = <ICustomXamlResourceLoader as windows_core::Interface>::IID;
}
impl windows_core::RuntimeName for CustomXamlResourceLoader {
    const NAME: &'static str = "Microsoft.UI.Xaml.Resources.CustomXamlResourceLoader";
}
unsafe impl Send for CustomXamlResourceLoader {}
unsafe impl Sync for CustomXamlResourceLoader {}
windows_core::imp::define_interface!(
    ICustomXamlResourceLoader,
    ICustomXamlResourceLoader_Vtbl,
    0x2832c2e5_2ace_5993_a173_3c9c3b992b2e
);
impl windows_core::RuntimeType for ICustomXamlResourceLoader {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
impl windows_core::RuntimeName for ICustomXamlResourceLoader {
    const NAME: &'static str = "Microsoft.UI.Xaml.Resources.ICustomXamlResourceLoader";
}
pub trait ICustomXamlResourceLoader_Impl: windows_core::IUnknownImpl {}
impl ICustomXamlResourceLoader_Vtbl {
    pub const fn new<Identity: ICustomXamlResourceLoader_Impl, const OFFSET: isize>() -> Self {
        Self {
            base__: windows_core::IInspectable_Vtbl::new::<
                Identity,
                ICustomXamlResourceLoader,
                OFFSET,
            >(),
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<ICustomXamlResourceLoader as windows_core::Interface>::IID
    }
}
#[repr(C)]
#[doc(hidden)]
pub struct ICustomXamlResourceLoader_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
}
windows_core::imp::define_interface!(
    ICustomXamlResourceLoaderFactory,
    ICustomXamlResourceLoaderFactory_Vtbl,
    0x174d49a6_e1e2_5f7b_a618_a8a953d1b5a0
);
impl windows_core::RuntimeType for ICustomXamlResourceLoaderFactory {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
impl windows_core::RuntimeName for ICustomXamlResourceLoaderFactory {
    const NAME: &'static str = "Microsoft.UI.Xaml.Resources.ICustomXamlResourceLoaderFactory";
}
pub trait ICustomXamlResourceLoaderFactory_Impl: windows_core::IUnknownImpl {
    fn CreateInstance(
        &self,
        baseInterface: windows_core::Ref<'_, windows_core::IInspectable>,
        innerInterface: windows_core::OutRef<'_, windows_core::IInspectable>,
    ) -> windows_core::Result<CustomXamlResourceLoader>;
}
impl ICustomXamlResourceLoaderFactory_Vtbl {
    pub const fn new<Identity: ICustomXamlResourceLoaderFactory_Impl, const OFFSET: isize>() -> Self
    {
        unsafe extern "system" fn CreateInstance<
            Identity: ICustomXamlResourceLoaderFactory_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            baseinterface: *mut core::ffi::c_void,
            innerinterface: *mut *mut core::ffi::c_void,
            result__: *mut *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            unsafe {
                let this: &Identity =
                    &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                match ICustomXamlResourceLoaderFactory_Impl::CreateInstance(
                    this,
                    core::mem::transmute_copy(&baseinterface),
                    core::mem::transmute_copy(&innerinterface),
                ) {
                    Ok(ok__) => {
                        result__.write(core::mem::transmute_copy(&ok__));
                        core::mem::forget(ok__);
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
        }
        Self {
            base__: windows_core::IInspectable_Vtbl::new::<
                Identity,
                ICustomXamlResourceLoaderFactory,
                OFFSET,
            >(),
            CreateInstance: CreateInstance::<Identity, OFFSET>,
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<ICustomXamlResourceLoaderFactory as windows_core::Interface>::IID
    }
}
#[repr(C)]
#[doc(hidden)]
pub struct ICustomXamlResourceLoaderFactory_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
    pub CreateInstance: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut *mut core::ffi::c_void,
        *mut *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
}
windows_core::imp::define_interface!(
    ICustomXamlResourceLoaderOverrides,
    ICustomXamlResourceLoaderOverrides_Vtbl,
    0x84bb504c_6730_586a_bd04_9198264b2dc7
);
impl windows_core::RuntimeType for ICustomXamlResourceLoaderOverrides {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
impl windows_core::RuntimeName for ICustomXamlResourceLoaderOverrides {
    const NAME: &'static str = "Microsoft.UI.Xaml.Resources.ICustomXamlResourceLoaderOverrides";
}
pub trait ICustomXamlResourceLoaderOverrides_Impl: windows_core::IUnknownImpl {
    fn GetResource(
        &self,
        resourceId: &windows_core::HSTRING,
        objectType: &windows_core::HSTRING,
        propertyName: &windows_core::HSTRING,
        propertyType: &windows_core::HSTRING,
    ) -> windows_core::Result<windows_core::IInspectable>;
}
impl ICustomXamlResourceLoaderOverrides_Vtbl {
    pub const fn new<Identity: ICustomXamlResourceLoaderOverrides_Impl, const OFFSET: isize>(
    ) -> Self {
        unsafe extern "system" fn GetResource<
            Identity: ICustomXamlResourceLoaderOverrides_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            resourceid: *mut core::ffi::c_void,
            objecttype: *mut core::ffi::c_void,
            propertyname: *mut core::ffi::c_void,
            propertytype: *mut core::ffi::c_void,
            result__: *mut *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            unsafe {
                let this: &Identity =
                    &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                match ICustomXamlResourceLoaderOverrides_Impl::GetResource(
                    this,
                    core::mem::transmute(&resourceid),
                    core::mem::transmute(&objecttype),
                    core::mem::transmute(&propertyname),
                    core::mem::transmute(&propertytype),
                ) {
                    Ok(ok__) => {
                        result__.write(core::mem::transmute_copy(&ok__));
                        core::mem::forget(ok__);
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
        }
        Self {
            base__: windows_core::IInspectable_Vtbl::new::<
                Identity,
                ICustomXamlResourceLoaderOverrides,
                OFFSET,
            >(),
            GetResource: GetResource::<Identity, OFFSET>,
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<ICustomXamlResourceLoaderOverrides as windows_core::Interface>::IID
    }
}
#[repr(C)]
#[doc(hidden)]
pub struct ICustomXamlResourceLoaderOverrides_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
    pub GetResource: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
}
windows_core::imp::define_interface!(
    ICustomXamlResourceLoaderStatics,
    ICustomXamlResourceLoaderStatics_Vtbl,
    0xe08a5a92_b1a2_539a_9d4a_7994e4468cd7
);
impl windows_core::RuntimeType for ICustomXamlResourceLoaderStatics {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
impl windows_core::RuntimeName for ICustomXamlResourceLoaderStatics {
    const NAME: &'static str = "Microsoft.UI.Xaml.Resources.ICustomXamlResourceLoaderStatics";
}
pub trait ICustomXamlResourceLoaderStatics_Impl: windows_core::IUnknownImpl {
    fn Current(&self) -> windows_core::Result<CustomXamlResourceLoader>;
    fn SetCurrent(
        &self,
        value: windows_core::Ref<'_, CustomXamlResourceLoader>,
    ) -> windows_core::Result<()>;
}
impl ICustomXamlResourceLoaderStatics_Vtbl {
    pub const fn new<Identity: ICustomXamlResourceLoaderStatics_Impl, const OFFSET: isize>() -> Self
    {
        unsafe extern "system" fn Current<
            Identity: ICustomXamlResourceLoaderStatics_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            result__: *mut *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            unsafe {
                let this: &Identity =
                    &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                match ICustomXamlResourceLoaderStatics_Impl::Current(this) {
                    Ok(ok__) => {
                        result__.write(core::mem::transmute_copy(&ok__));
                        core::mem::forget(ok__);
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
        }
        unsafe extern "system" fn SetCurrent<
            Identity: ICustomXamlResourceLoaderStatics_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            value: *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            unsafe {
                let this: &Identity =
                    &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                ICustomXamlResourceLoaderStatics_Impl::SetCurrent(
                    this,
                    core::mem::transmute_copy(&value),
                )
                .into()
            }
        }
        Self {
            base__: windows_core::IInspectable_Vtbl::new::<
                Identity,
                ICustomXamlResourceLoaderStatics,
                OFFSET,
            >(),
            Current: Current::<Identity, OFFSET>,
            SetCurrent: SetCurrent::<Identity, OFFSET>,
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<ICustomXamlResourceLoaderStatics as windows_core::Interface>::IID
    }
}
#[repr(C)]
#[doc(hidden)]
pub struct ICustomXamlResourceLoaderStatics_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
    pub Current: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *mut *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
    pub SetCurrent: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
}
