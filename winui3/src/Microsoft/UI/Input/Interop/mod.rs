// Bindings generated by `windows-bindgen` 0.62.1

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

windows_core::imp::define_interface!(
    IPenDeviceInteropStatics,
    IPenDeviceInteropStatics_Vtbl,
    0xc2a59f2a_e077_5d30_a1bd_cf84dd09ee39
);
impl windows_core::RuntimeType for IPenDeviceInteropStatics {
    const SIGNATURE: windows_core::imp::ConstBuffer =
        windows_core::imp::ConstBuffer::for_interface::<Self>();
}
impl windows_core::RuntimeName for IPenDeviceInteropStatics {
    const NAME: &'static str = "Microsoft.UI.Input.Interop.IPenDeviceInteropStatics";
}
pub trait IPenDeviceInteropStatics_Impl: windows_core::IUnknownImpl {
    fn FromPointerPoint(
        &self,
        pointerPoint: windows_core::Ref<'_, super::PointerPoint>,
    ) -> windows_core::Result<windows::Devices::Input::PenDevice>;
}
impl IPenDeviceInteropStatics_Vtbl {
    pub const fn new<Identity: IPenDeviceInteropStatics_Impl, const OFFSET: isize>() -> Self {
        unsafe extern "system" fn FromPointerPoint<
            Identity: IPenDeviceInteropStatics_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            pointerpoint: *mut core::ffi::c_void,
            result__: *mut *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            unsafe {
                let this: &Identity =
                    &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                match IPenDeviceInteropStatics_Impl::FromPointerPoint(
                    this,
                    core::mem::transmute_copy(&pointerpoint),
                ) {
                    Ok(ok__) => {
                        result__.write(core::mem::transmute_copy(&ok__));
                        core::mem::forget(ok__);
                        windows_core::HRESULT(0)
                    }
                    Err(err) => err.into(),
                }
            }
        }
        Self {
            base__: windows_core::IInspectable_Vtbl::new::<
                Identity,
                IPenDeviceInteropStatics,
                OFFSET,
            >(),
            FromPointerPoint: FromPointerPoint::<Identity, OFFSET>,
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<IPenDeviceInteropStatics as windows_core::Interface>::IID
    }
}
#[repr(C)]
#[doc(hidden)]
pub struct IPenDeviceInteropStatics_Vtbl {
    pub base__: windows_core::IInspectable_Vtbl,
    pub FromPointerPoint: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
}
pub struct PenDeviceInterop;
impl PenDeviceInterop {
    pub fn FromPointerPoint<P0>(
        pointerpoint: P0,
    ) -> windows_core::Result<windows::Devices::Input::PenDevice>
    where
        P0: windows_core::Param<super::PointerPoint>,
    {
        Self::IPenDeviceInteropStatics(|this| unsafe {
            let mut result__ = core::mem::zeroed();
            (windows_core::Interface::vtable(this).FromPointerPoint)(
                windows_core::Interface::as_raw(this),
                pointerpoint.param().abi(),
                &mut result__,
            )
            .and_then(|| windows_core::Type::from_abi(result__))
        })
    }
    fn IPenDeviceInteropStatics<
        R,
        F: FnOnce(&IPenDeviceInteropStatics) -> windows_core::Result<R>,
    >(
        callback: F,
    ) -> windows_core::Result<R> {
        static SHARED: windows_core::imp::FactoryCache<PenDeviceInterop, IPenDeviceInteropStatics> =
            windows_core::imp::FactoryCache::new();
        SHARED.call(callback)
    }
}
impl windows_core::RuntimeName for PenDeviceInterop {
    const NAME: &'static str = "Microsoft.UI.Input.Interop.PenDeviceInterop";
}
